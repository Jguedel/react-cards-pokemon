{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport uuid from \"react-uuid\";\nfunction useAxiosCard(url) {\n  _s();\n  // call useState, \"reserve piece of state\"\n  const [response, setResponse] = useState([{\n    code: \"\",\n    image: \"\",\n    value: \"\",\n    suit: \"\"\n  }]);\n  const [err, setError] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        if (url === null) {\n          new ErrorEvent(\"null\");\n        } else {\n          const res = await axios.get(url);\n          setResponse([...response, {\n            ...res.data.cards,\n            id: uuid()\n          }]);\n          setError(\"\");\n        }\n      } catch (error) {\n        setError(error);\n      }\n      setLoading(false);\n    };\n    fetch();\n  }, [url]);\n  //   console.log(`Error: ${error}`);\n  //   console.log(`Loading: ${loading}`);\n  //   console.log(`URL: ${url}`);\n  // return piece of state AND a function to toggle it\n  return {\n    response,\n    err,\n    loading\n  };\n}\n_s(useAxiosCard, \"6CZ9C4yERFkuq7d3eWX/5aHOD5o=\");\nexport default useAxiosCard;","map":{"version":3,"names":["axios","useState","useEffect","uuid","useAxiosCard","url","_s","response","setResponse","code","image","value","suit","err","setError","loading","setLoading","fetch","ErrorEvent","res","get","data","cards","id","error"],"sources":["C:/Users/jgued/ClassWork/react-cards-pokemon/src/hooks/useAxiosCard.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport uuid from \"react-uuid\";\r\n\r\nfunction useAxiosCard(url) {\r\n  // call useState, \"reserve piece of state\"\r\n  const [response, setResponse] = useState([\r\n    { code: \"\", image: \"\", value: \"\", suit: \"\" },\r\n  ]);\r\n  const [err, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      try {\r\n        if (url === null) {\r\n          new ErrorEvent(\"null\");\r\n        } else {\r\n          const res = await axios.get(url);\r\n          setResponse([...response, { ...res.data.cards, id: uuid() }]);\r\n          setError(\"\");\r\n        }\r\n      } catch (error) {\r\n        setError(error);\r\n      }\r\n      setLoading(false);\r\n    };\r\n    fetch();\r\n  }, [url]);\r\n  //   console.log(`Error: ${error}`);\r\n  //   console.log(`Loading: ${loading}`);\r\n  //   console.log(`URL: ${url}`);\r\n  // return piece of state AND a function to toggle it\r\n  return { response, err, loading };\r\n}\r\n\r\nexport default useAxiosCard;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,YAAY;AAE7B,SAASC,YAAYA,CAACC,GAAG,EAAE;EAAAC,EAAA;EACzB;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,CACvC;IAAEQ,IAAI,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC,CAC7C,CAAC;EACF,MAAM,CAACC,GAAG,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC5CC,SAAS,CAAC,MAAM;IACd,MAAMe,KAAK,GAAG,MAAAA,CAAA,KAAY;MACxB,IAAI;QACF,IAAIZ,GAAG,KAAK,IAAI,EAAE;UAChB,IAAIa,UAAU,CAAC,MAAM,CAAC;QACxB,CAAC,MAAM;UACL,MAAMC,GAAG,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAACf,GAAG,CAAC;UAChCG,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;YAAE,GAAGY,GAAG,CAACE,IAAI,CAACC,KAAK;YAAEC,EAAE,EAAEpB,IAAI,CAAC;UAAE,CAAC,CAAC,CAAC;UAC7DW,QAAQ,CAAC,EAAE,CAAC;QACd;MACF,CAAC,CAAC,OAAOU,KAAK,EAAE;QACdV,QAAQ,CAACU,KAAK,CAAC;MACjB;MACAR,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC;IACDC,KAAK,CAAC,CAAC;EACT,CAAC,EAAE,CAACZ,GAAG,CAAC,CAAC;EACT;EACA;EACA;EACA;EACA,OAAO;IAAEE,QAAQ;IAAEM,GAAG;IAAEE;EAAQ,CAAC;AACnC;AAACT,EAAA,CA7BQF,YAAY;AA+BrB,eAAeA,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}