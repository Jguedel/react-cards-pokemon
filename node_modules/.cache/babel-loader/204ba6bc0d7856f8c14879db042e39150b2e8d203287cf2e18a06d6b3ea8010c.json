{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jgued\\\\ClassWork\\\\react-cards-pokemon\\\\src\\\\PlayingCardList.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport uuid from \"react-uuid\";\nimport axios from \"axios\";\nimport PlayingCard from \"./PlayingCard\";\nimport \"./PlayingCardList.css\";\nimport useAxiosCard from \"./hooks/useAxiosCard.js\";\n\n/* Renders a list of playing cards.\n * Can also add a new card at random. */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CardTable() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [cards, setCards] = useState([]);\n  const addCard = async () => {\n    _s();\n    const response = await axios.get(\"https://deckofcardsapi.com/api/deck/new/draw/\");\n    console.log(response);\n    const list = useAxiosCard(\"//deckofcardsapi.com/api/deck/new/draw/\");\n    setCards(cards => [...cards, {\n      ...response.data,\n      id: uuid()\n    }]);\n  };\n  _s(addCard, \"EaKH9bdL6TZzffzWSQzuzhnd1ek=\", false, function () {\n    return [useAxiosCard];\n  });\n  if (list.loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading.....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  } else if (list.error != null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"sorry error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  } else {\n    const res = list.response.data.cards;\n    console.log(res);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PlayingCardList\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Pick a card, any card!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addCard,\n          children: \"Add a playing card!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"PlayingCardList-card-area\",\n        children: cards.map(cardData => /*#__PURE__*/_jsxDEV(PlayingCard, {\n          front: cardData.cards[0].image\n        }, cardData.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n}\n_s2(CardTable, \"3Rb2RowhqfSKkufviexCcjkH0X8=\");\n_c = CardTable;\nCardTable.defaultProps = {};\nexport default CardTable;\nvar _c;\n$RefreshReg$(_c, \"CardTable\");","map":{"version":3,"names":["React","useState","uuid","axios","PlayingCard","useAxiosCard","jsxDEV","_jsxDEV","CardTable","_s2","_s","$RefreshSig$","cards","setCards","addCard","response","get","console","log","list","data","id","loading","children","fileName","_jsxFileName","lineNumber","columnNumber","error","res","className","onClick","map","cardData","front","image","_c","defaultProps","$RefreshReg$"],"sources":["C:/Users/jgued/ClassWork/react-cards-pokemon/src/PlayingCardList.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport uuid from \"react-uuid\";\nimport axios from \"axios\";\nimport PlayingCard from \"./PlayingCard\";\nimport \"./PlayingCardList.css\";\nimport useAxiosCard from \"./hooks/useAxiosCard.js\";\n\n/* Renders a list of playing cards.\n * Can also add a new card at random. */\nfunction CardTable() {\n  const [cards, setCards] = useState([]);\n  const addCard = async () => {\n    const response = await axios.get(\n      \"https://deckofcardsapi.com/api/deck/new/draw/\"\n    );\n    console.log(response);\n    const list = useAxiosCard(\"//deckofcardsapi.com/api/deck/new/draw/\");\n    setCards((cards) => [...cards, { ...response.data, id: uuid() }]);\n  };\n  if (list.loading) {\n    return <div>Loading.....</div>;\n  } else if (list.error != null) {\n    return <div>sorry error</div>;\n  } else {\n    const res = list.response.data.cards;\n    console.log(res);\n    return (\n      <div className=\"PlayingCardList\">\n        <h3>Pick a card, any card!</h3>\n        <div>\n          <button onClick={addCard}>Add a playing card!</button>\n        </div>\n        <div className=\"PlayingCardList-card-area\">\n          {cards.map((cardData) => (\n            <PlayingCard key={cardData.id} front={cardData.cards[0].image} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nCardTable.defaultProps = {};\n\nexport default CardTable;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,uBAAuB;AAC9B,OAAOC,YAAY,MAAM,yBAAyB;;AAElD;AACA;AADA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,SAASA,CAAA,EAAG;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMa,OAAO,GAAG,MAAAA,CAAA,KAAY;IAAAJ,EAAA;IAC1B,MAAMK,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAC9B,+CACF,CAAC;IACDC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;IACrB,MAAMI,IAAI,GAAGd,YAAY,CAAC,yCAAyC,CAAC;IACpEQ,QAAQ,CAAED,KAAK,IAAK,CAAC,GAAGA,KAAK,EAAE;MAAE,GAAGG,QAAQ,CAACK,IAAI;MAAEC,EAAE,EAAEnB,IAAI,CAAC;IAAE,CAAC,CAAC,CAAC;EACnE,CAAC;EAACQ,EAAA,CAPII,OAAO;IAAA,QAKET,YAAY;EAAA;EAG3B,IAAIc,IAAI,CAACG,OAAO,EAAE;IAChB,oBAAOf,OAAA;MAAAgB,QAAA,EAAK;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC,CAAC,MAAM,IAAIR,IAAI,CAACS,KAAK,IAAI,IAAI,EAAE;IAC7B,oBAAOrB,OAAA;MAAAgB,QAAA,EAAK;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC/B,CAAC,MAAM;IACL,MAAME,GAAG,GAAGV,IAAI,CAACJ,QAAQ,CAACK,IAAI,CAACR,KAAK;IACpCK,OAAO,CAACC,GAAG,CAACW,GAAG,CAAC;IAChB,oBACEtB,OAAA;MAAKuB,SAAS,EAAC,iBAAiB;MAAAP,QAAA,gBAC9BhB,OAAA;QAAAgB,QAAA,EAAI;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/BpB,OAAA;QAAAgB,QAAA,eACEhB,OAAA;UAAQwB,OAAO,EAAEjB,OAAQ;UAAAS,QAAA,EAAC;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC,eACNpB,OAAA;QAAKuB,SAAS,EAAC,2BAA2B;QAAAP,QAAA,EACvCX,KAAK,CAACoB,GAAG,CAAEC,QAAQ,iBAClB1B,OAAA,CAACH,WAAW;UAAmB8B,KAAK,EAAED,QAAQ,CAACrB,KAAK,CAAC,CAAC,CAAC,CAACuB;QAAM,GAA5CF,QAAQ,CAACZ,EAAE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAmC,CACjE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;AACF;AAAClB,GAAA,CA/BQD,SAAS;AAAA4B,EAAA,GAAT5B,SAAS;AAiClBA,SAAS,CAAC6B,YAAY,GAAG,CAAC,CAAC;AAE3B,eAAe7B,SAAS;AAAC,IAAA4B,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}