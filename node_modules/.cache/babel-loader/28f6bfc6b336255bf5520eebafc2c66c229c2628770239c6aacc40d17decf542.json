{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport uuid from \"react-uuid\";\nfunction useAxiosCard(url) {\n  _s();\n  // call useState, \"reserve piece of state\"\n  const [response, setResponse] = useState([]);\n  const [err, setError] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const fetch = async () => {\n    try {\n      if (url === null) {\n        new ErrorEvent(\"null\");\n      } else {\n        console.log(url);\n        const res = await axios.get(url);\n        console.log(res.date);\n        setResponse([...response, {\n          ...res.data.cards,\n          id: uuid()\n        }]);\n        setError(\"\");\n      }\n    } catch (error) {\n      setError(error);\n    }\n    setLoading(false);\n  };\n  fetch();\n  //   console.log(`Error: ${error}`);\n  //   console.log(`Loading: ${loading}`);\n  //   console.log(`URL: ${url}`);\n  // return piece of state AND a function to toggle it\n  if (err.length < 1) {\n    return {\n      response,\n      loading,\n      fetch\n    };\n  }\n}\n_s(useAxiosCard, \"YlWMreLHemHxV5L7MRCBDC+iAXs=\");\nexport default useAxiosCard;","map":{"version":3,"names":["axios","useState","useEffect","uuid","useAxiosCard","url","_s","response","setResponse","err","setError","loading","setLoading","fetch","ErrorEvent","console","log","res","get","date","data","cards","id","error","length"],"sources":["C:/Users/jgued/ClassWork/react-cards-pokemon/src/hooks/useAxiosCard.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport uuid from \"react-uuid\";\r\n\r\nfunction useAxiosCard(url) {\r\n  // call useState, \"reserve piece of state\"\r\n  const [response, setResponse] = useState([]);\r\n  const [err, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const fetch = async () => {\r\n    try {\r\n      if (url === null) {\r\n        new ErrorEvent(\"null\");\r\n      } else {\r\n        console.log(url);\r\n        const res = await axios.get(url);\r\n        console.log(res.date);\r\n        setResponse([...response, { ...res.data.cards, id: uuid() }]);\r\n        setError(\"\");\r\n      }\r\n    } catch (error) {\r\n      setError(error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  fetch();\r\n  //   console.log(`Error: ${error}`);\r\n  //   console.log(`Loading: ${loading}`);\r\n  //   console.log(`URL: ${url}`);\r\n  // return piece of state AND a function to toggle it\r\n  if (err.length < 1) {\r\n    return { response, loading, fetch };\r\n  }\r\n}\r\n\r\nexport default useAxiosCard;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,YAAY;AAE7B,SAASC,YAAYA,CAACC,GAAG,EAAE;EAAAC,EAAA;EACzB;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,GAAG,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMY,KAAK,GAAG,MAAAA,CAAA,KAAY;IACxB,IAAI;MACF,IAAIR,GAAG,KAAK,IAAI,EAAE;QAChB,IAAIS,UAAU,CAAC,MAAM,CAAC;MACxB,CAAC,MAAM;QACLC,OAAO,CAACC,GAAG,CAACX,GAAG,CAAC;QAChB,MAAMY,GAAG,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAACb,GAAG,CAAC;QAChCU,OAAO,CAACC,GAAG,CAACC,GAAG,CAACE,IAAI,CAAC;QACrBX,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;UAAE,GAAGU,GAAG,CAACG,IAAI,CAACC,KAAK;UAAEC,EAAE,EAAEnB,IAAI,CAAC;QAAE,CAAC,CAAC,CAAC;QAC7DO,QAAQ,CAAC,EAAE,CAAC;MACd;IACF,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdb,QAAQ,CAACa,KAAK,CAAC;IACjB;IACAX,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EACDC,KAAK,CAAC,CAAC;EACP;EACA;EACA;EACA;EACA,IAAIJ,GAAG,CAACe,MAAM,GAAG,CAAC,EAAE;IAClB,OAAO;MAAEjB,QAAQ;MAAEI,OAAO;MAAEE;IAAM,CAAC;EACrC;AACF;AAACP,EAAA,CA9BQF,YAAY;AAgCrB,eAAeA,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}